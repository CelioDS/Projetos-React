{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\celio\\\\GitHub\\\\Projetos-React\\\\business\\\\src\\\\componentes\\\\pages\\\\VisualizarDB.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport style from \"./VisualizarDB.module.css\";\nimport Container from \"../layout/Container\";\nimport LinkButton from \"../layout/LinkButton\";\nimport ContatosMascara from \"../mascara/ContatosMascara\";\nimport { useEffect, useState } from \"react\";\nimport databaseLocal from \"../bd/databaseLocal.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VisualizarDB = () => {\n  _s();\n  const {\n    id,\n    nome\n  } = useParams(); // Obtém o parâmetro de rota 'id' usando o hook useParams()\n  const idNumber = parseInt(id); // Converte o 'id' para um número inteiro\n  const [database, setDatabase] = useState(); // Estado para armazenar os dados do banco de dados\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const url = process.env.REACT_APP_API_URL || \"http://localhost:5000/usuarios\";\n        const response = await fetch(url, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const data = await response.json(); // Converte a resposta em formato JSON\n        setDatabase(data); // Atualiza o estado 'database' com os dados recebidos\n      } catch (error) {\n        console.log(\"Erro ao obter os dados\", error);\n      }\n    };\n    setDatabase(databaseLocal.usuarios);\n    fetchData(); // Chama a função fetchData() quando o componente é montado\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.father,\n      children: [/*#__PURE__*/_jsxDEV(LinkButton, {\n        to: \"/visualizar\",\n        text: \"Voltar\",\n        className: styles.btn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Informa\\xE7\\xF5es completas:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: ` ${nome}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), database && database.map(_ref => {\n        let {\n          id,\n          nome,\n          contatos,\n          localidade,\n          setor,\n          visao,\n          fundada,\n          imagem\n        } = _ref;\n        if (id === idNumber) {\n          return /*#__PURE__*/_jsxDEV(\"section\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.info,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 25\n                }, this), \" \", nome]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Contatos:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 25\n                }, this), \" \", ContatosMascara(contatos)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"localidade:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 25\n                }, this), \" \", localidade]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"setor:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 25\n                }, this), \" \", setor]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"visao:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 25\n                }, this), \" \", visao]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"fundada:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 25\n                }, this), \" \", fundada]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 23\n              }, this)]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n              className: style.imagem,\n              children: /*#__PURE__*/_jsxDEV(\"figure\", {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: imagem,\n                  alt: imagem\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n                  children: nome\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this);\n        }\n        return null;\n      })]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(VisualizarDB, \"cG/hgw8t3mGAsoEOW2xbVy/aVNE=\", false, function () {\n  return [useParams];\n});\n_c = VisualizarDB;\nexport default VisualizarDB;\nvar _c;\n$RefreshReg$(_c, \"VisualizarDB\");","map":{"version":3,"names":["useParams","style","Container","LinkButton","ContatosMascara","useEffect","useState","databaseLocal","jsxDEV","_jsxDEV","VisualizarDB","_s","id","nome","idNumber","parseInt","database","setDatabase","fetchData","url","process","env","REACT_APP_API_URL","response","fetch","method","headers","data","json","error","console","log","usuarios","children","className","father","to","text","styles","btn","fileName","_jsxFileName","lineNumber","columnNumber","map","_ref","contatos","localidade","setor","visao","fundada","imagem","info","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/celio/GitHub/Projetos-React/business/src/componentes/pages/VisualizarDB.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport style from \"./VisualizarDB.module.css\";\r\nimport Container from \"../layout/Container\";\r\nimport LinkButton from \"../layout/LinkButton\";\r\nimport ContatosMascara from \"../mascara/ContatosMascara\";\r\nimport { useEffect, useState } from \"react\";\r\nimport databaseLocal from \"../bd/databaseLocal.json\";\r\n\r\nconst VisualizarDB = () => {\r\n  const { id, nome } = useParams(); // Obtém o parâmetro de rota 'id' usando o hook useParams()\r\n  const idNumber = parseInt(id); // Converte o 'id' para um número inteiro\r\n  const [database, setDatabase] = useState(); // Estado para armazenar os dados do banco de dados\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const url =\r\n          process.env.REACT_APP_API_URL || \"http://localhost:5000/usuarios\";\r\n\r\n        const response = await fetch(url, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        const data = await response.json(); // Converte a resposta em formato JSON\r\n        setDatabase(data); // Atualiza o estado 'database' com os dados recebidos\r\n      } catch (error) {\r\n        console.log(\"Erro ao obter os dados\", error);\r\n      }\r\n    };\r\n    setDatabase(databaseLocal.usuarios);\r\n    fetchData(); // Chama a função fetchData() quando o componente é montado\r\n  }, []);\r\n\r\n  return (\r\n    <Container key={id}>\r\n      <div className={style.father} key={id}>\r\n        <LinkButton to=\"/visualizar\" text=\"Voltar\" className={styles.btn} />\r\n        <h1>\r\n          Informações completas:\r\n          <br />\r\n          <span>{` ${nome}`}</span>\r\n        </h1>\r\n\r\n        {database &&\r\n          database.map(\r\n            ({\r\n              id,\r\n              nome,\r\n              contatos,\r\n              localidade,\r\n              setor,\r\n              visao,\r\n              fundada,\r\n              imagem,\r\n            }) => {\r\n              if (id === idNumber) {\r\n                return (\r\n                  <section key={id}>\r\n                    <div key={id} className={style.info}>\r\n                      <p>\r\n                        <span>name:</span> {nome}\r\n                      </p>\r\n                      <p>\r\n                        <span>Contatos:</span> {ContatosMascara(contatos)}\r\n                      </p>\r\n                      <p>\r\n                        <span>localidade:</span> {localidade}\r\n                      </p>\r\n                      <p>\r\n                        <span>setor:</span> {setor}\r\n                      </p>\r\n                      <p>\r\n                        <span>visao:</span> {visao}\r\n                      </p>\r\n                      <p>\r\n                        <span>fundada:</span> {fundada}\r\n                      </p>\r\n                    </div>\r\n                    <section className={style.imagem}>\r\n                      <figure>\r\n                        <img src={imagem} alt={imagem} />\r\n                        <figcaption>{nome}</figcaption>\r\n                      </figure>\r\n                    </section>\r\n                  </section>\r\n                );\r\n              }\r\n              return null;\r\n            }\r\n          )}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default VisualizarDB;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}