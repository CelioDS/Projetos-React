{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/celio/GitHub/Projetos-React/business/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/celio/GitHub/Projetos-React/business/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/celio/GitHub/Projetos-React/business/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useParams}from\"react-router-dom\";import style from\"./VisualizarDB.module.css\";import Container from\"../layout/Container\";import LinkButton from\"../layout/LinkButton\";import ContatosMascara from\"../mascara/ContatosMascara\";import{useEffect,useState}from\"react\";import databaseLocal from\"../bd/databaseLocal.json\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var VisualizarDB=function VisualizarDB(){var _useParams=useParams(),id=_useParams.id,nome=_useParams.nome;// Obtém o parâmetro de rota 'id' usando o hook useParams()\nvar idNumber=parseInt(id);// Converte o 'id' para um número inteiro\nvar _useState=useState(),_useState2=_slicedToArray(_useState,2),database=_useState2[0],setDatabase=_useState2[1];// Estado para armazenar os dados do banco de dados\nuseEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var url,response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;url=process.env.REACT_APP_API_URL||\"http://localhost:5000/usuarios\";_context.next=4;return fetch(url,{method:\"GET\",headers:{\"Content-Type\":\"application/json\"}});case 4:response=_context.sent;_context.next=7;return response.json();case 7:data=_context.sent;// Converte a resposta em formato JSON\nsetDatabase(data);// Atualiza o estado 'database' com os dados recebidos\nconsole.log(data);_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);console.log(\"Erro ao obter os dados\",_context.t0);case 15:case\"end\":return _context.stop();}},_callee,null,[[0,12]]);}));return function fetchData(){return _ref.apply(this,arguments);};}();setDatabase(databaseLocal.usuarios);fetchData();// Chama a função fetchData() quando o componente é montado\n},[]);return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(\"div\",{className:style.father,children:[/*#__PURE__*/_jsx(LinkButton,{to:\"/visualizar\",text:\"Voltar\",className:style.btn}),/*#__PURE__*/_jsxs(\"h1\",{children:[\"Informa\\xE7\\xF5es completas:\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"span\",{children:[\" \".concat(nome),\"-\",id]})]}),database&&database.map(function(_ref2){var id=_ref2.id,nome=_ref2.nome,contatos=_ref2.contatos,localidade=_ref2.localidade,setor=_ref2.setor,visao=_ref2.visao,fundada=_ref2.fundada,imagem=_ref2.imagem;if(id===idNumber){return/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:style.info,children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"name:\"}),\" \",nome]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Contatos:\"}),\" \",ContatosMascara(contatos)]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"localidade:\"}),\" \",localidade]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"setor:\"}),\" \",setor]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"visao:\"}),\" \",visao]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"fundada:\"}),\" \",fundada]})]},id),/*#__PURE__*/_jsx(\"section\",{className:style.imagem,children:/*#__PURE__*/_jsxs(\"figure\",{children:[/*#__PURE__*/_jsx(\"img\",{src:imagem,alt:imagem}),/*#__PURE__*/_jsx(\"figcaption\",{children:nome})]})})]});}return null;})]},id)},id);};export default VisualizarDB;","map":{"version":3,"names":["useParams","style","Container","LinkButton","ContatosMascara","useEffect","useState","databaseLocal","jsx","_jsx","jsxs","_jsxs","VisualizarDB","_useParams","id","nome","idNumber","parseInt","_useState","_useState2","_slicedToArray","database","setDatabase","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","response","data","wrap","_callee$","_context","prev","next","process","env","REACT_APP_API_URL","fetch","method","headers","sent","json","console","log","t0","stop","apply","arguments","usuarios","children","className","father","to","text","btn","concat","map","_ref2","contatos","localidade","setor","visao","fundada","imagem","info","src","alt"],"sources":["C:/Users/celio/GitHub/Projetos-React/business/src/componentes/pages/VisualizarDB.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport style from \"./VisualizarDB.module.css\";\r\nimport Container from \"../layout/Container\";\r\nimport LinkButton from \"../layout/LinkButton\";\r\nimport ContatosMascara from \"../mascara/ContatosMascara\";\r\nimport { useEffect, useState } from \"react\";\r\nimport databaseLocal from \"../bd/databaseLocal.json\";\r\n\r\nconst VisualizarDB = () => {\r\n  const { id, nome } = useParams(); // Obtém o parâmetro de rota 'id' usando o hook useParams()\r\n  const idNumber = parseInt(id); // Converte o 'id' para um número inteiro\r\n  const [database, setDatabase] = useState(); // Estado para armazenar os dados do banco de dados\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const url =\r\n          process.env.REACT_APP_API_URL || \"http://localhost:5000/usuarios\";\r\n\r\n        const response = await fetch(url, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        const data = await response.json(); // Converte a resposta em formato JSON\r\n        setDatabase(data); // Atualiza o estado 'database' com os dados recebidos\r\n        console.log(data);\r\n      } catch (error) {\r\n        console.log(\"Erro ao obter os dados\", error);\r\n      }\r\n    };\r\n    setDatabase(databaseLocal.usuarios);\r\n    fetchData(); // Chama a função fetchData() quando o componente é montado\r\n  }, []);\r\n\r\n  return (\r\n    <Container key={id}>\r\n      <div className={style.father} key={id}>\r\n        <LinkButton to=\"/visualizar\" text=\"Voltar\" className={style.btn} />\r\n        <h1>\r\n          Informações completas:\r\n          <br />\r\n          <span>\r\n            {` ${nome}`}-{id}\r\n          </span>\r\n        </h1>\r\n\r\n        {database &&\r\n          database.map(\r\n            ({\r\n              id,\r\n              nome,\r\n              contatos,\r\n              localidade,\r\n              setor,\r\n              visao,\r\n              fundada,\r\n              imagem,\r\n            }) => {\r\n              if (id === idNumber) {\r\n                return (\r\n                  <section>\r\n                    <div key={id} className={style.info}>\r\n                      <p>\r\n                        <span>name:</span> {nome}\r\n                      </p>\r\n                      <p>\r\n                        <span>Contatos:</span> {ContatosMascara(contatos)}\r\n                      </p>\r\n                      <p>\r\n                        <span>localidade:</span> {localidade}\r\n                      </p>\r\n                      <p>\r\n                        <span>setor:</span> {setor}\r\n                      </p>\r\n                      <p>\r\n                        <span>visao:</span> {visao}\r\n                      </p>\r\n                      <p>\r\n                        <span>fundada:</span> {fundada}\r\n                      </p>\r\n                    </div>\r\n                    <section className={style.imagem}>\r\n                      <figure>\r\n                        <img src={imagem} alt={imagem} />\r\n                        <figcaption>{nome}</figcaption>\r\n                      </figure>\r\n                    </section>\r\n                  </section>\r\n                );\r\n              }\r\n              return null;\r\n            }\r\n          )}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default VisualizarDB;\r\n"],"mappings":"yZAAA,OAASA,SAAS,KAAQ,kBAAkB,CAC5C,MAAO,CAAAC,KAAK,KAAM,2BAA2B,CAC7C,MAAO,CAAAC,SAAS,KAAM,qBAAqB,CAC3C,MAAO,CAAAC,UAAU,KAAM,sBAAsB,CAC7C,MAAO,CAAAC,eAAe,KAAM,4BAA4B,CACxD,OAASC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,MAAO,CAAAC,aAAa,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAErD,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAA,CAAS,CACzB,IAAAC,UAAA,CAAqBb,SAAS,CAAC,CAAC,CAAxBc,EAAE,CAAAD,UAAA,CAAFC,EAAE,CAAEC,IAAI,CAAAF,UAAA,CAAJE,IAAI,CAAkB;AAClC,GAAM,CAAAC,QAAQ,CAAGC,QAAQ,CAACH,EAAE,CAAC,CAAE;AAC/B,IAAAI,SAAA,CAAgCZ,QAAQ,CAAC,CAAC,CAAAa,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAnCG,QAAQ,CAAAF,UAAA,IAAEG,WAAW,CAAAH,UAAA,IAAgB;AAE5Cd,SAAS,CAAC,UAAM,CACd,GAAM,CAAAkB,SAAS,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA,MAAAC,GAAA,CAAAC,QAAA,CAAAC,IAAA,QAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAC,IAAA,GAERN,GAAG,CACPQ,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,gCAAgC,CAAAL,QAAA,CAAAE,IAAA,SAE5C,CAAAI,KAAK,CAACX,GAAG,CAAE,CAChCY,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,QALIZ,QAAQ,CAAAI,QAAA,CAAAS,IAAA,CAAAT,QAAA,CAAAE,IAAA,SAMK,CAAAN,QAAQ,CAACc,IAAI,CAAC,CAAC,QAA5Bb,IAAI,CAAAG,QAAA,CAAAS,IAAA,CAA0B;AACpCrB,WAAW,CAACS,IAAI,CAAC,CAAE;AACnBc,OAAO,CAACC,GAAG,CAACf,IAAI,CAAC,CAACG,QAAA,CAAAE,IAAA,kBAAAF,QAAA,CAAAC,IAAA,IAAAD,QAAA,CAAAa,EAAA,CAAAb,QAAA,aAElBW,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAAZ,QAAA,CAAAa,EAAO,CAAC,CAAC,yBAAAb,QAAA,CAAAc,IAAA,MAAApB,OAAA,iBAEhD,kBAjBK,CAAAL,SAASA,CAAA,SAAAC,IAAA,CAAAyB,KAAA,MAAAC,SAAA,OAiBd,CACD5B,WAAW,CAACf,aAAa,CAAC4C,QAAQ,CAAC,CACnC5B,SAAS,CAAC,CAAC,CAAE;AACf,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEd,IAAA,CAACP,SAAS,EAAAkD,QAAA,cACRzC,KAAA,QAAK0C,SAAS,CAAEpD,KAAK,CAACqD,MAAO,CAAAF,QAAA,eAC3B3C,IAAA,CAACN,UAAU,EAACoD,EAAE,CAAC,aAAa,CAACC,IAAI,CAAC,QAAQ,CAACH,SAAS,CAAEpD,KAAK,CAACwD,GAAI,CAAE,CAAC,cACnE9C,KAAA,OAAAyC,QAAA,EAAI,8BAEF,cAAA3C,IAAA,QAAK,CAAC,cACNE,KAAA,SAAAyC,QAAA,MAAAM,MAAA,CACO3C,IAAI,EAAG,GAAC,CAACD,EAAE,EACZ,CAAC,EACL,CAAC,CAEJO,QAAQ,EACPA,QAAQ,CAACsC,GAAG,CACV,SAAAC,KAAA,CASM,IARJ,CAAA9C,EAAE,CAAA8C,KAAA,CAAF9C,EAAE,CACFC,IAAI,CAAA6C,KAAA,CAAJ7C,IAAI,CACJ8C,QAAQ,CAAAD,KAAA,CAARC,QAAQ,CACRC,UAAU,CAAAF,KAAA,CAAVE,UAAU,CACVC,KAAK,CAAAH,KAAA,CAALG,KAAK,CACLC,KAAK,CAAAJ,KAAA,CAALI,KAAK,CACLC,OAAO,CAAAL,KAAA,CAAPK,OAAO,CACPC,MAAM,CAAAN,KAAA,CAANM,MAAM,CAEN,GAAIpD,EAAE,GAAKE,QAAQ,CAAE,CACnB,mBACEL,KAAA,YAAAyC,QAAA,eACEzC,KAAA,QAAc0C,SAAS,CAAEpD,KAAK,CAACkE,IAAK,CAAAf,QAAA,eAClCzC,KAAA,MAAAyC,QAAA,eACE3C,IAAA,SAAA2C,QAAA,CAAM,OAAK,CAAM,CAAC,IAAC,CAACrC,IAAI,EACvB,CAAC,cACJJ,KAAA,MAAAyC,QAAA,eACE3C,IAAA,SAAA2C,QAAA,CAAM,WAAS,CAAM,CAAC,IAAC,CAAChD,eAAe,CAACyD,QAAQ,CAAC,EAChD,CAAC,cACJlD,KAAA,MAAAyC,QAAA,eACE3C,IAAA,SAAA2C,QAAA,CAAM,aAAW,CAAM,CAAC,IAAC,CAACU,UAAU,EACnC,CAAC,cACJnD,KAAA,MAAAyC,QAAA,eACE3C,IAAA,SAAA2C,QAAA,CAAM,QAAM,CAAM,CAAC,IAAC,CAACW,KAAK,EACzB,CAAC,cACJpD,KAAA,MAAAyC,QAAA,eACE3C,IAAA,SAAA2C,QAAA,CAAM,QAAM,CAAM,CAAC,IAAC,CAACY,KAAK,EACzB,CAAC,cACJrD,KAAA,MAAAyC,QAAA,eACE3C,IAAA,SAAA2C,QAAA,CAAM,UAAQ,CAAM,CAAC,IAAC,CAACa,OAAO,EAC7B,CAAC,GAlBInD,EAmBL,CAAC,cACNL,IAAA,YAAS4C,SAAS,CAAEpD,KAAK,CAACiE,MAAO,CAAAd,QAAA,cAC/BzC,KAAA,WAAAyC,QAAA,eACE3C,IAAA,QAAK2D,GAAG,CAAEF,MAAO,CAACG,GAAG,CAAEH,MAAO,CAAE,CAAC,cACjCzD,IAAA,eAAA2C,QAAA,CAAarC,IAAI,CAAa,CAAC,EACzB,CAAC,CACF,CAAC,EACH,CAAC,CAEd,CACA,MAAO,KAAI,CACb,CACF,CAAC,GAxD8BD,EAyD9B,CAAC,EA1DQA,EA2DL,CAAC,CAEhB,CAAC,CAED,cAAe,CAAAF,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}